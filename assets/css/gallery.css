/*

All grid code is placed in a 'supports' rule (feature query) at the bottom of the CSS (Line 77). 
        
The 'supports' rule will only run if your browser supports CSS grid.

Flexbox is used as a fallback so that browsers which don't support grid will still recieve an identical layout.

*/


:root {
	/* Base font size */
	font-size: 5px;
}
*,
*::before,
*::after {
	box-sizing: border-box;
}

body {
	min-height: 100vh;
	overflow-y: hidden;
}

.container1 {
	max-width: 75%;
	margin: 0 auto;
	padding: 0 2rem 2rem;
  animation: scroll 10s linear infinite;
}

.heading1 {
	font-family: "Montserrat", Arial, sans-serif;
	font-size: 4rem;
	font-weight: 500;
	text-align: center;
	padding: 0.5rem 0;
	color: #fcfcfc;
  margin-top: 1px;
}


.gallery1 {
	display: flex;
	flex-wrap: wrap;
	/* Compensate for excess margin on outer gallery flex items */
	margin: -1rem -1rem;
  overflow: hidden;
  
}

.gallery1-item {
	/* Minimum width of 24rem and grow to fit available space */
	flex: 1 0 24rem;
	/* Margin value should be half of grid-gap value as margins on flex items don't collapse */
	margin: 1rem;
	box-shadow: 0.3rem 0.4rem 0.4rem rgba(0, 0, 0, 0.4);
	overflow: hidden;
  border-radius: 10px;
  border: 1px solid lawngreen;
}

.gallery1-image {
	display: block;
	width: 100%;
	height: 100%;
	object-fit: cover;
	transition: transform 400ms ease-out;
  border-radius: 10px;
}

.gallery1-image:hover {
	transform: scale(1.15);
}

/*

The following rule will only run if your browser supports CSS grid.

Remove or comment-out the code block below to see how the browser will fall-back to flexbox styling. 

*/

 @keyframes scroll {
  0% {transform: translateY(0);}
  100% {transform: translateY(-200%)}
} 


  